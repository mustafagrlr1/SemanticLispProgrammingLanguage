Terminals unused in grammar

    KW_DEFVAR


State 9 conflicts: 1 shift/reduce, 7 reduce/reduce
State 35 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: 
            '\n'
    2      | input
    3      | input start

    4 input:
             OP_OP KW_EXIT OP_CP
    5      | expi
    6      | explisti
    7      | expb

    8 values: 
            values VALUE
    9       | VALUE

   10 explisti: OP_OP KW_CONCAT explisti values OP_CP
   11         | OP_OP KW_APPEND explisti values OP_CP
   12         | values

   13 expb: OP_OP KW_AND expi expi OP_CP
   14     | OP_OP KW_OR expi expi OP_CP
   15     | OP_OP KW_NOT expi OP_CP
   16     | OP_OP KW_EQUAL expi expb OP_CP
   17     | OP_OP KW_EQUAL expi expi OP_CP
   18     | binaryvalues

   19 binaryvalues: KW_TRUE
   20             | KW_FALSE

   21 expi: 
    values
   22     | OP_OP OP_PLUS expi expi OP_CP
   23     | OP_OP OP_MINUS expi expi OP_CP
   24     | OP_OP OP_DIV expi expi OP_CP
   25     | OP_OP OP_MULT expi expi OP_CP
   26     | OP_OP OP_DBMULT expi expi OP_CP
   27     | IDENTIFIER
   28     | OP_OP IDENTIFIER explisti OP_CP
   29     | OP_OP KW_SET IDENTIFIER values OP_CP
   30     | OP_OP KW_IF expb explisti OP_CP
   31     | OP_OP KW_IF expb explisti explisti OP_CP
   32     | OP_OP KW_IF expb OP_CP
   33     | OP_OP KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP
   34     | OP_OP KW_LIST expi OP_CP


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    error (256)
    KW_AND (258) 13
    KW_OR (259) 14
    KW_NOT (260) 15
    KW_EQUAL (261) 16 17
    KW_APPEND (262) 11
    KW_CONCAT (263) 10
    KW_SET (264) 29
    KW_FOR (265) 33
    KW_IF (266) 30 31 32
    KW_DEFVAR (267)
    KW_EXIT (268) 4
    KW_TRUE (269) 19
    KW_FALSE (270) 20
    KW_LIST (271) 34
    OP_PLUS (272) 22
    OP_MINUS (273) 23
    OP_DIV (274) 24
    OP_MULT (275) 25
    OP_OP (276) 4 10 11 13 14 15 16 17 22 23 24 25 26 28 29 30 31 32 33 34
    OP_CP (277) 4 10 11 13 14 15 16 17 22 23 24 25 26 28 29 30 31 32 33 34
    OP_DBMULT (278) 26
    VALUE (279) 8 9
    IDENTIFIER (280) 27 28 29 33


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    start (28)
        on left: 1 2 3
        on right: 0 3
    input (29)
        on left: 4 5 6 7
        on right: 2 3
    values (30)
        on left: 8 9
        on right: 8 10 11 12 21 29
    explisti (31)
        on left: 10 11 12
        on right: 6 10 11 28 30 31 33
    expb (32)
        on left: 13 14 15 16 17 18
        on right: 7 16 30 31 32
    binaryvalues (33)
        on left: 19 20
        on right: 18
    expi (34)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 5 13 14 15 16 17 22 23 24 25 26 33 34


State 0

    0 $accept: . start $end

    KW_TRUE     shift, and go to state 1
    KW_FALSE    shift, and go to state 2
    OP_OP       shift, and go to state 3
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '\n'        shift, and go to state 6

    start         go to state 7
    input         go to state 8
    values        go to state 9
    explisti      go to state 10
    expb          go to state 11
    binaryvalues  go to state 12
    expi          go to state 13


State 1

   19 binaryvalues: KW_TRUE .

    $default  reduce using rule 19 (binaryvalues)


State 2

   20 binaryvalues: KW_FALSE .

    $default  reduce using rule 20 (binaryvalues)


State 3

    4 input: OP_OP . KW_EXIT OP_CP
   10 explisti: OP_OP . KW_CONCAT explisti values OP_CP
   11         | OP_OP . KW_APPEND explisti values OP_CP
   13 expb: OP_OP . KW_AND expi expi OP_CP
   14     | OP_OP . KW_OR expi expi OP_CP
   15     | OP_OP . KW_NOT expi OP_CP
   16     | OP_OP . KW_EQUAL expi expb OP_CP
   17     | OP_OP . KW_EQUAL expi expi OP_CP
   22 expi: OP_OP . OP_PLUS expi expi OP_CP
   23     | OP_OP . OP_MINUS expi expi OP_CP
   24     | OP_OP . OP_DIV expi expi OP_CP
   25     | OP_OP . OP_MULT expi expi OP_CP
   26     | OP_OP . OP_DBMULT expi expi OP_CP
   28     | OP_OP . IDENTIFIER explisti OP_CP
   29     | OP_OP . KW_SET IDENTIFIER values OP_CP
   30     | OP_OP . KW_IF expb explisti OP_CP
   31     | OP_OP . KW_IF expb explisti explisti OP_CP
   32     | OP_OP . KW_IF expb OP_CP
   33     | OP_OP . KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP
   34     | OP_OP . KW_LIST expi OP_CP

    KW_AND      shift, and go to state 14
    KW_OR       shift, and go to state 15
    KW_NOT      shift, and go to state 16
    KW_EQUAL    shift, and go to state 17
    KW_APPEND   shift, and go to state 18
    KW_CONCAT   shift, and go to state 19
    KW_SET      shift, and go to state 20
    KW_FOR      shift, and go to state 21
    KW_IF       shift, and go to state 22
    KW_EXIT     shift, and go to state 23
    KW_LIST     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_DIV      shift, and go to state 27
    OP_MULT     shift, and go to state 28
    OP_DBMULT   shift, and go to state 29
    IDENTIFIER  shift, and go to state 30


State 4

    9 values: VALUE .

    $default  reduce using rule 9 (values)


State 5

   27 expi: IDENTIFIER .

    $default  reduce using rule 27 (expi)


State 6

    1 start: '\n' .

    $default  reduce using rule 1 (start)


State 7

    0 $accept: start . $end

    $end  shift, and go to state 31


State 8

    2 start: input .
    3      | input . start

    KW_TRUE     shift, and go to state 1
    KW_FALSE    shift, and go to state 2
    OP_OP       shift, and go to state 3
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    '\n'        shift, and go to state 6

    $default  reduce using rule 2 (start)

    start         go to state 32
    input         go to state 8
    values        go to state 9
    explisti      go to state 10
    expb          go to state 11
    binaryvalues  go to state 12
    expi          go to state 13


State 9

    8 values: values . VALUE
   12 explisti: values .
   21 expi: values .

    VALUE  shift, and go to state 33

    $end        reduce using rule 12 (explisti)
    $end        [reduce using rule 21 (expi)]
    KW_TRUE     reduce using rule 12 (explisti)
    KW_TRUE     [reduce using rule 21 (expi)]
    KW_FALSE    reduce using rule 12 (explisti)
    KW_FALSE    [reduce using rule 21 (expi)]
    OP_OP       reduce using rule 12 (explisti)
    OP_OP       [reduce using rule 21 (expi)]
    VALUE       [reduce using rule 12 (explisti)]
    VALUE       [reduce using rule 21 (expi)]
    IDENTIFIER  reduce using rule 12 (explisti)
    IDENTIFIER  [reduce using rule 21 (expi)]
    '\n'        reduce using rule 12 (explisti)
    '\n'        [reduce using rule 21 (expi)]
    $default    reduce using rule 12 (explisti)


State 10

    6 input: explisti .

    $default  reduce using rule 6 (input)


State 11

    7 input: expb .

    $default  reduce using rule 7 (input)


State 12

   18 expb: binaryvalues .

    $default  reduce using rule 18 (expb)


State 13

    5 input: expi .

    $default  reduce using rule 5 (input)


State 14

   13 expb: OP_OP KW_AND . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 36


State 15

   14 expb: OP_OP KW_OR . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 37


State 16

   15 expb: OP_OP KW_NOT . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 38


State 17

   16 expb: OP_OP KW_EQUAL . expi expb OP_CP
   17     | OP_OP KW_EQUAL . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 39


State 18

   11 explisti: OP_OP KW_APPEND . explisti values OP_CP

    OP_OP  shift, and go to state 40
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 42


State 19

   10 explisti: OP_OP KW_CONCAT . explisti values OP_CP

    OP_OP  shift, and go to state 40
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 43


State 20

   29 expi: OP_OP KW_SET . IDENTIFIER values OP_CP

    IDENTIFIER  shift, and go to state 44


State 21

   33 expi: OP_OP KW_FOR . OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP

    OP_OP  shift, and go to state 45


State 22

   30 expi: OP_OP KW_IF . expb explisti OP_CP
   31     | OP_OP KW_IF . expb explisti explisti OP_CP
   32     | OP_OP KW_IF . expb OP_CP

    KW_TRUE   shift, and go to state 1
    KW_FALSE  shift, and go to state 2
    OP_OP     shift, and go to state 46

    expb          go to state 47
    binaryvalues  go to state 12


State 23

    4 input: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 48


State 24

   34 expi: OP_OP KW_LIST . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 49


State 25

   22 expi: OP_OP OP_PLUS . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 50


State 26

   23 expi: OP_OP OP_MINUS . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 51


State 27

   24 expi: OP_OP OP_DIV . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 52


State 28

   25 expi: OP_OP OP_MULT . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 53


State 29

   26 expi: OP_OP OP_DBMULT . expi expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 54


State 30

   28 expi: OP_OP IDENTIFIER . explisti OP_CP

    OP_OP  shift, and go to state 40
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 55


State 31

    0 $accept: start $end .

    $default  accept


State 32

    3 start: input start .

    $default  reduce using rule 3 (start)


State 33

    8 values: values VALUE .

    $default  reduce using rule 8 (values)


State 34

   22 expi: OP_OP . OP_PLUS expi expi OP_CP
   23     | OP_OP . OP_MINUS expi expi OP_CP
   24     | OP_OP . OP_DIV expi expi OP_CP
   25     | OP_OP . OP_MULT expi expi OP_CP
   26     | OP_OP . OP_DBMULT expi expi OP_CP
   28     | OP_OP . IDENTIFIER explisti OP_CP
   29     | OP_OP . KW_SET IDENTIFIER values OP_CP
   30     | OP_OP . KW_IF expb explisti OP_CP
   31     | OP_OP . KW_IF expb explisti explisti OP_CP
   32     | OP_OP . KW_IF expb OP_CP
   33     | OP_OP . KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP
   34     | OP_OP . KW_LIST expi OP_CP

    KW_SET      shift, and go to state 20
    KW_FOR      shift, and go to state 21
    KW_IF       shift, and go to state 22
    KW_LIST     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_DIV      shift, and go to state 27
    OP_MULT     shift, and go to state 28
    OP_DBMULT   shift, and go to state 29
    IDENTIFIER  shift, and go to state 30


State 35

    8 values: values . VALUE
   21 expi: values .

    VALUE  shift, and go to state 33

    VALUE     [reduce using rule 21 (expi)]
    $default  reduce using rule 21 (expi)


State 36

   13 expb: OP_OP KW_AND expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 56


State 37

   14 expb: OP_OP KW_OR expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 57


State 38

   15 expb: OP_OP KW_NOT expi . OP_CP

    OP_CP  shift, and go to state 58


State 39

   16 expb: OP_OP KW_EQUAL expi . expb OP_CP
   17     | OP_OP KW_EQUAL expi . expi OP_CP

    KW_TRUE     shift, and go to state 1
    KW_FALSE    shift, and go to state 2
    OP_OP       shift, and go to state 59
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values        go to state 35
    expb          go to state 60
    binaryvalues  go to state 12
    expi          go to state 61


State 40

   10 explisti: OP_OP . KW_CONCAT explisti values OP_CP
   11         | OP_OP . KW_APPEND explisti values OP_CP

    KW_APPEND  shift, and go to state 18
    KW_CONCAT  shift, and go to state 19


State 41

    8 values: values . VALUE
   12 explisti: values .

    VALUE  shift, and go to state 33

    VALUE     [reduce using rule 12 (explisti)]
    $default  reduce using rule 12 (explisti)


State 42

   11 explisti: OP_OP KW_APPEND explisti . values OP_CP

    VALUE  shift, and go to state 4

    values  go to state 62


State 43

   10 explisti: OP_OP KW_CONCAT explisti . values OP_CP

    VALUE  shift, and go to state 4

    values  go to state 63


State 44

   29 expi: OP_OP KW_SET IDENTIFIER . values OP_CP

    VALUE  shift, and go to state 4

    values  go to state 64


State 45

   33 expi: OP_OP KW_FOR OP_OP . IDENTIFIER expi expi OP_CP explisti OP_CP

    IDENTIFIER  shift, and go to state 65


State 46

   13 expb: OP_OP . KW_AND expi expi OP_CP
   14     | OP_OP . KW_OR expi expi OP_CP
   15     | OP_OP . KW_NOT expi OP_CP
   16     | OP_OP . KW_EQUAL expi expb OP_CP
   17     | OP_OP . KW_EQUAL expi expi OP_CP

    KW_AND    shift, and go to state 14
    KW_OR     shift, and go to state 15
    KW_NOT    shift, and go to state 16
    KW_EQUAL  shift, and go to state 17


State 47

   30 expi: OP_OP KW_IF expb . explisti OP_CP
   31     | OP_OP KW_IF expb . explisti explisti OP_CP
   32     | OP_OP KW_IF expb . OP_CP

    OP_OP  shift, and go to state 40
    OP_CP  shift, and go to state 66
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 67


State 48

    4 input: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 4 (input)


State 49

   34 expi: OP_OP KW_LIST expi . OP_CP

    OP_CP  shift, and go to state 68


State 50

   22 expi: OP_OP OP_PLUS expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 69


State 51

   23 expi: OP_OP OP_MINUS expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 70


State 52

   24 expi: OP_OP OP_DIV expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 71


State 53

   25 expi: OP_OP OP_MULT expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 72


State 54

   26 expi: OP_OP OP_DBMULT expi . expi OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 73


State 55

   28 expi: OP_OP IDENTIFIER explisti . OP_CP

    OP_CP  shift, and go to state 74


State 56

   13 expb: OP_OP KW_AND expi expi . OP_CP

    OP_CP  shift, and go to state 75


State 57

   14 expb: OP_OP KW_OR expi expi . OP_CP

    OP_CP  shift, and go to state 76


State 58

   15 expb: OP_OP KW_NOT expi OP_CP .

    $default  reduce using rule 15 (expb)


State 59

   13 expb: OP_OP . KW_AND expi expi OP_CP
   14     | OP_OP . KW_OR expi expi OP_CP
   15     | OP_OP . KW_NOT expi OP_CP
   16     | OP_OP . KW_EQUAL expi expb OP_CP
   17     | OP_OP . KW_EQUAL expi expi OP_CP
   22 expi: OP_OP . OP_PLUS expi expi OP_CP
   23     | OP_OP . OP_MINUS expi expi OP_CP
   24     | OP_OP . OP_DIV expi expi OP_CP
   25     | OP_OP . OP_MULT expi expi OP_CP
   26     | OP_OP . OP_DBMULT expi expi OP_CP
   28     | OP_OP . IDENTIFIER explisti OP_CP
   29     | OP_OP . KW_SET IDENTIFIER values OP_CP
   30     | OP_OP . KW_IF expb explisti OP_CP
   31     | OP_OP . KW_IF expb explisti explisti OP_CP
   32     | OP_OP . KW_IF expb OP_CP
   33     | OP_OP . KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP
   34     | OP_OP . KW_LIST expi OP_CP

    KW_AND      shift, and go to state 14
    KW_OR       shift, and go to state 15
    KW_NOT      shift, and go to state 16
    KW_EQUAL    shift, and go to state 17
    KW_SET      shift, and go to state 20
    KW_FOR      shift, and go to state 21
    KW_IF       shift, and go to state 22
    KW_LIST     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_DIV      shift, and go to state 27
    OP_MULT     shift, and go to state 28
    OP_DBMULT   shift, and go to state 29
    IDENTIFIER  shift, and go to state 30


State 60

   16 expb: OP_OP KW_EQUAL expi expb . OP_CP

    OP_CP  shift, and go to state 77


State 61

   17 expb: OP_OP KW_EQUAL expi expi . OP_CP

    OP_CP  shift, and go to state 78


State 62

    8 values: values . VALUE
   11 explisti: OP_OP KW_APPEND explisti values . OP_CP

    OP_CP  shift, and go to state 79
    VALUE  shift, and go to state 33


State 63

    8 values: values . VALUE
   10 explisti: OP_OP KW_CONCAT explisti values . OP_CP

    OP_CP  shift, and go to state 80
    VALUE  shift, and go to state 33


State 64

    8 values: values . VALUE
   29 expi: OP_OP KW_SET IDENTIFIER values . OP_CP

    OP_CP  shift, and go to state 81
    VALUE  shift, and go to state 33


State 65

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER . expi expi OP_CP explisti OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 82


State 66

   32 expi: OP_OP KW_IF expb OP_CP .

    $default  reduce using rule 32 (expi)


State 67

   30 expi: OP_OP KW_IF expb explisti . OP_CP
   31     | OP_OP KW_IF expb explisti . explisti OP_CP

    OP_OP  shift, and go to state 40
    OP_CP  shift, and go to state 83
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 84


State 68

   34 expi: OP_OP KW_LIST expi OP_CP .

    $default  reduce using rule 34 (expi)


State 69

   22 expi: OP_OP OP_PLUS expi expi . OP_CP

    OP_CP  shift, and go to state 85


State 70

   23 expi: OP_OP OP_MINUS expi expi . OP_CP

    OP_CP  shift, and go to state 86


State 71

   24 expi: OP_OP OP_DIV expi expi . OP_CP

    OP_CP  shift, and go to state 87


State 72

   25 expi: OP_OP OP_MULT expi expi . OP_CP

    OP_CP  shift, and go to state 88


State 73

   26 expi: OP_OP OP_DBMULT expi expi . OP_CP

    OP_CP  shift, and go to state 89


State 74

   28 expi: OP_OP IDENTIFIER explisti OP_CP .

    $default  reduce using rule 28 (expi)


State 75

   13 expb: OP_OP KW_AND expi expi OP_CP .

    $default  reduce using rule 13 (expb)


State 76

   14 expb: OP_OP KW_OR expi expi OP_CP .

    $default  reduce using rule 14 (expb)


State 77

   16 expb: OP_OP KW_EQUAL expi expb OP_CP .

    $default  reduce using rule 16 (expb)


State 78

   17 expb: OP_OP KW_EQUAL expi expi OP_CP .

    $default  reduce using rule 17 (expb)


State 79

   11 explisti: OP_OP KW_APPEND explisti values OP_CP .

    $default  reduce using rule 11 (explisti)


State 80

   10 explisti: OP_OP KW_CONCAT explisti values OP_CP .

    $default  reduce using rule 10 (explisti)


State 81

   29 expi: OP_OP KW_SET IDENTIFIER values OP_CP .

    $default  reduce using rule 29 (expi)


State 82

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER expi . expi OP_CP explisti OP_CP

    OP_OP       shift, and go to state 34
    VALUE       shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    values  go to state 35
    expi    go to state 90


State 83

   30 expi: OP_OP KW_IF expb explisti OP_CP .

    $default  reduce using rule 30 (expi)


State 84

   31 expi: OP_OP KW_IF expb explisti explisti . OP_CP

    OP_CP  shift, and go to state 91


State 85

   22 expi: OP_OP OP_PLUS expi expi OP_CP .

    $default  reduce using rule 22 (expi)


State 86

   23 expi: OP_OP OP_MINUS expi expi OP_CP .

    $default  reduce using rule 23 (expi)


State 87

   24 expi: OP_OP OP_DIV expi expi OP_CP .

    $default  reduce using rule 24 (expi)


State 88

   25 expi: OP_OP OP_MULT expi expi OP_CP .

    $default  reduce using rule 25 (expi)


State 89

   26 expi: OP_OP OP_DBMULT expi expi OP_CP .

    $default  reduce using rule 26 (expi)


State 90

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER expi expi . OP_CP explisti OP_CP

    OP_CP  shift, and go to state 92


State 91

   31 expi: OP_OP KW_IF expb explisti explisti OP_CP .

    $default  reduce using rule 31 (expi)


State 92

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER expi expi OP_CP . explisti OP_CP

    OP_OP  shift, and go to state 40
    VALUE  shift, and go to state 4

    values    go to state 41
    explisti  go to state 93


State 93

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti . OP_CP

    OP_CP  shift, and go to state 94


State 94

   33 expi: OP_OP KW_FOR OP_OP IDENTIFIER expi expi OP_CP explisti OP_CP .

    $default  reduce using rule 33 (expi)
